// ------------------------------------------------------------------------------------------------
// <auto-generated>
//  This code was generated by a C# code generator.
//  Warning: Do not make changes directly to this file; they will get overwritten on the next code generation.
// </auto-generated>
// ------------------------------------------------------------------------------------------------
using System;
using System.Data;
using System.Linq;
using System.Collections.Generic;
using Microsoft.Data.SqlClient;
using Microsoft.Data.SqlClient.Server;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

namespace MyApp.EfCore;

public partial class MyDbContext : DbContext
{
    public static class TableInputTypes
    {
		public static class dbo
		{
			public class IdList : List<Int32?>
			{
				public List<SqlDataRecord> ToRecords()
				{
					var tableSchema = new SqlMetaData[] { 
						new SqlMetaData("Id", SqlDbType.Int),
					};
					var table = new List<SqlDataRecord>();
					foreach (var item in this)
					{
						var tableRow = new SqlDataRecord(tableSchema);
						if (item == null) { tableRow.SetDBNull(0); } else { tableRow.SetInt32(0, item.Value); }
						table.Add(tableRow);
					}
					return table;
				}
			}

			public class IdDescList : List<(Int32? Id, String Desc)>
			{
				public List<SqlDataRecord> ToRecords()
				{
					var tableSchema = new SqlMetaData[] { 
						new SqlMetaData("Id", SqlDbType.Int),
						new SqlMetaData("Desc", SqlDbType.NVarChar, 4000),
					};
					var table = new List<SqlDataRecord>();
					foreach (var item in this)
					{
						var tableRow = new SqlDataRecord(tableSchema);
						if (item.Id == null) { tableRow.SetDBNull(0); } else { tableRow.SetInt32(0, item.Id.Value); }
						if (item.Desc == null) { tableRow.SetDBNull(1); } else { tableRow.SetString(1, item.Desc); }
						table.Add(tableRow);
					}
					return table;
				}
			}

			public class MyTableType : List<(Int32? Id, String Name)>
			{
				public List<SqlDataRecord> ToRecords()
				{
					var tableSchema = new SqlMetaData[] { 
						new SqlMetaData("Id", SqlDbType.Int),
						new SqlMetaData("Name", SqlDbType.NVarChar, 4000),
					};
					var table = new List<SqlDataRecord>();
					foreach (var item in this)
					{
						var tableRow = new SqlDataRecord(tableSchema);
						if (item.Id == null) { tableRow.SetDBNull(0); } else { tableRow.SetInt32(0, item.Id.Value); }
						if (item.Name == null) { tableRow.SetDBNull(1); } else { tableRow.SetString(1, item.Name); }
						table.Add(tableRow);
					}
					return table;
				}
			}


		}

		public static class xyz
		{
			public class IdList : List<Int32?>
			{
				public List<SqlDataRecord> ToRecords()
				{
					var tableSchema = new SqlMetaData[] { 
						new SqlMetaData("Id", SqlDbType.Int),
					};
					var table = new List<SqlDataRecord>();
					foreach (var item in this)
					{
						var tableRow = new SqlDataRecord(tableSchema);
						if (item == null) { tableRow.SetDBNull(0); } else { tableRow.SetInt32(0, item.Value); }
						table.Add(tableRow);
					}
					return table;
				}
			}


		}


    }
}
